<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cy.store.mapper.UserMapper">

        <!--自定义映射规则：resultMap标签来完成映射规则的定义    -->
        <!--
            id属性：标签给这个映射负责分配唯一的id值，对应的就是resultMap=“id属性的值”属性的取值
            type属性：取值是一个类，表示的是数据库中查询的结果与Java中那个实体类的结果集进行映射
            -->
    <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
        <!--  将表的字段和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略不写-->
        <!--
              配合完成名称不一致的映射
              column属性：表示表中的资源名称
              property属性：表示类中的属性名称
              主键不能省略
              -->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

        <!--id属性：表示映射的接口中方法的名称，直接在标签的内容来编写sql语句    -->
          <!--useGeneratedKeys属性：开启某个字段的递增（主键设置为递增） -->
            <!--keyProperty将表中那个字段作为主键递增  -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        insert into tb_user(
        username, password, salt, phone, email, gender, avatar, is_delete,
        created_user, created_time, modified_user, modified_time
        )VALUES (
        #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},
        #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>

    <select id="findByUsername" resultMap="UserEntityMap">
        select * from tb_user where username = #{username}
    </select>
</mapper>